!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define("cookieManager",["exports"],n):n(e.cookieManager={})}(this,function(e){"use strict";"undefined"==typeof console&&(console={log:function(){},info:function(){},debug:function(){},warn:function(){},error:function(){}});const n={"delete-undefined-cookies":!0,"user-preference-cookie-name":"cm-user-preferences","user-preference-cookie-secure":!1,"user-preference-cookie-expiry-days":365,"user-preference-configuration-form-id":!1,"user-preference-saved-callback":!1,"cookie-banner-id":!1,"cookie-banner-visible-on-page-with-preference-form":!0,"cookie-manifest":[]};let o={};const t=function(){const e=o["user-preference-cookie-name"],n=i(e);n||console.info("User preference cookie is not set or valid. This cookie defines user preferences. Assuming non-consent, and deleting all non-essential cookies if config allows.");const t=decodeURIComponent(document.cookie).split(";");if(1!==t.length||!t[0].match(/^ *$/)){for(var c=0;c<t.length;c++){const i=t[c].split(/=(.*)/)[0].trim();if(i===e)continue;const a=r(i);!1!==a?!1!==a.optional?n&&!1!==n.hasOwnProperty(a["category-name"])?"off"!==n[a["category-name"]]&&"false"!==n[a["category-name"]]?console.info('Cookie "'+i+'" is listed under category "'+a["category-name"]+'"; user preferences opts in-to this category; cleared for use.'):(console.info('Cookie "'+i+'" is listed under category "'+a["category-name"]+'"; user preferences opts out of this category; deleting.'),s(i)):(console.info('Cookie "'+i+'" is listed  Cannot find category "'+a.category_name+'" in user preference cookie "'+e+'"; assuming non-consent; deleting.'),s(i)):console.debug('Cookie "'+i+'" is marked as non-optional; skipping.'):o["delete-undefined-cookies"]?(console.info('Cookie "'+i+'" is not in the manifest and "delete-undefined-cookies" is enabled; deleting.'),s(i)):console.info('Cookie "'+i+'" is not in the manifest and "delete-undefined-cookies" is disabled; skipping.')}console.debug("Finishing processing all cookies.")}},i=function(){const e=c(o["user-preference-cookie-name"]);if(!e)return!1;try{return JSON.parse(e)}catch(e){return console.error('Unable to parse user preference cookie "'+cm_cookie+'" as JSON.',e),!1}},r=function(e){const n=o["cookie-manifest"];for(var t=0;t<n.length;t++){const o=n[t].cookies;for(var i=0;i<o.length;i++){const r=o[i];if(e.startsWith(r))return console.debug('Cookie "'+e+'" found in manifest.'),n[t]}}return console.debug('Cookie "'+e+'" NOT found in manifest.'),!1},c=function(e){const n=e+"=",o=decodeURIComponent(document.cookie).split(";");for(var t=0;t<o.length;t++){let e=o[t];for(;" "===e.charAt(0);)e=e.substring(1);if(0===e.indexOf(n))return e.substring(n.length,e.length)}return!1},s=function(e){if(a(e),O("domains")){let t="."+window.location.hostname;for(var n=0;n<o.domains.length;n++)t.indexOf(o.domains[n])>=0&&d(e,o.domains[n])}else u(e);console.debug('Deleted cookie "'+e+'"')},a=function(e){document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/;"},u=function(e){let n=window.location.hostname,o="."+n;document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;domain="+n+";path=/;",document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;domain="+o+";path=/;";let t=n.indexOf("."),i=n.substring(t),r="."+i;document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;domain="+i+";path=/;",document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;domain="+r+";path=/;"},d=function(e,n){let o="."+n;document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;domain="+n+";path=/;",document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;domain="+o+";path=/;",console.debug("delete "+e+" in "+n+" and "+o)},f=function(){if(!x("user-preference-configuration-form-id"))return void console.debug("Skipping binding to user cookie preference form.");if("loading"===document.readyState)return document.addEventListener("DOMContentLoaded",function(){f()}),void console.debug("DOM is not ready; adding event to bind to form when ready.");const e=l();null!==e&&(e.addEventListener("submit",function(e){g(e),t()}),console.debug('Found and bound to cookie preference form with ID "'+o["user-preference-configuration-form-id"]+'".'),p())},l=function(){return document.getElementById(o["user-preference-configuration-form-id"])},p=function(){if(C("set-checkboxes-in-preference-form"))return void console.log("Skipping set preferences in form");const e=l();if(null===e)return;const n=i();for(var o in n){let t=e.querySelectorAll('input[name="'+o+'"]');for(let e=0;e<t.length;e++)n.hasOwnProperty(o)&&(t[e].checked=t[e].value===n[o])}},g=function(e){e.preventDefault(),console.debug("Saving user cookie preferences from Form...");const n=document.getElementById(o["user-preference-configuration-form-id"]).querySelectorAll('input[type="radio"]:checked'),t={};for(var i=0;i<n.length;i++){const e=n.item(i),o=e.getAttribute("name"),r=e.getAttribute("value");console.log("Processing Radio: "+o+" = "+r+")}",i),t[e.getAttribute("name")]=e.getAttribute("value")}k(t),!1!==o["user-preference-saved-callback"]&&"function"==typeof o["user-preference-saved-callback"]&&o["user-preference-saved-callback"]()},m=function(e,n){e.preventDefault(),console.debug("Setting user cookie preferences from Cookie Banner ("+n+")...");const t={};for(let e=0;e<o["cookie-manifest"].length;e++){const i=o["cookie-manifest"][e];i.optional&&(t[i["category-name"]]=n)}k(t),!1!==o["cookie-banner-saved-callback"]&&"function"==typeof o["cookie-banner-saved-callback"]&&o["cookie-banner-saved-callback"](e)},k=function(e){!function(e){const n=o["user-preference-cookie-name"];let t=w("user-preference-cookie-secure"),i=365;T("user-preference-cookie-expiry-days")&&(i=o["user-preference-cookie-expiry-days"]);const r=new Date;r.setTime(r.getTime()+24*i*60*60*1e3);const c="expires="+r.toUTCString();let s=n+"="+encodeURIComponent(e)+";"+c+";path=/";t&&(s+=";secure"),document.cookie=s}(JSON.stringify(e)),console.debug("Saved user cookie preferences to cookie",c(o["user-preference-cookie-name"]))},b=function(e){null!==e&&e.addEventListener("click",function(e){m(e,"on"),t()})},h=function(e){null!==e&&e.addEventListener("click",function(e){m(e,"off"),t()})},y=function(){if(!x("cookie-banner-id"))return void console.debug("Skipping binding to cookie banner as both cookie-banner-id and are not defined");if("loading"===document.readyState)return document.addEventListener("DOMContentLoaded",function(){y()}),void console.debug("DOM is not ready; adding event to bind to cookie banner when ready.");const e=document.getElementById(o["cookie-banner-id"]);if(null!==e){const n=e.querySelectorAll("button");for(let e=0;e<n.length;e++){let o=n[e];"reject"===o.value?(h(o),console.debug("Found and bound reject all button")):"accept"!==o.value&&"submit"!==o.type||(b(o),console.debug("Found and bound accept all button"))}console.debug('Found and bound to cookie banner with ID "'+o["cookie-banner-id"]+'".'),v()}},v=function(){const e=document.getElementById(o["cookie-banner-id"]);if(null===e)return void console.error("Cannot work with cookie banner unless cookie-banner-id is configured.");const n=document.getElementById(o["user-preference-configuration-form-id"]),t=o["cookie-banner-visible-on-page-with-preference-form"],r=o["user-preference-cookie-name"];i(r)?(e.hidden=!0,console.debug("Cookie banner was set to not visible.")):null!==n&&!1===t?e.hidden=!0:(e.hidden=!1,console.debug("Cookie banner was set to visible."))},w=function(e){return o.hasOwnProperty(e)&&!0===o[e]},C=function(e){return!o.hasOwnProperty(e)||!1===o[e]},T=function(e){return o.hasOwnProperty(e)&&!isNaN(o[e])},x=function(e){return o.hasOwnProperty(e)&&"string"==typeof o[e]&&""!==o[e].trim()},O=function(e){return o.hasOwnProperty(e)&&"object"==typeof o[e]&&o[e].length>0};e.init=function(e){for(var i in o=n,e)o[i]=e[i];console.debug(o),t(),f(),y()}});